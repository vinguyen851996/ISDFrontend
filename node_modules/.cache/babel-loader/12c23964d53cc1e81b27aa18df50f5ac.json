{"ast":null,"code":"import { makeObservable, observable, runInAction } from \"mobx\";\nimport * as services from './service';\n\nfunction createCompanyStore() {\n  const store = observable({\n    company: []\n  });\n\n  const getCompany = username => {\n    return async () => {\n      try {\n        const result = await services.companyList(username);\n        runInAction(() => {\n          this.companyStore.company = result.data;\n        });\n      } catch (err) {}\n\n      console.log(username);\n    };\n  };\n\n  return {\n    store,\n    controller: {\n      getCompany\n    }\n  };\n}","map":{"version":3,"names":["makeObservable","observable","runInAction","services","createCompanyStore","store","company","getCompany","username","result","companyList","companyStore","data","err","console","log","controller"],"sources":["C:/Users/Thuc Vi/Desktop/ISDFrontend/src/store/companyStore.js"],"sourcesContent":["import { makeObservable, observable, runInAction } from \"mobx\"\r\nimport * as services from './service';\r\n\r\n function createCompanyStore() {\r\n  const store = observable({ company: [] });\r\n  const getCompany = (username) => {\r\n\r\n    return async () => {\r\n      try {\r\n        const result = await services.companyList(username)\r\n        runInAction(() => {\r\n          this.companyStore.company = result.data;\r\n        });\r\n      } catch (err) {\r\n\r\n      }\r\n      console.log(username)\r\n    }\r\n  };\r\n  return {\r\n    store,\r\n    controller: {\r\n      getCompany,\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,QAAwD,MAAxD;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;;AAEC,SAASC,kBAAT,GAA8B;EAC7B,MAAMC,KAAK,GAAGJ,UAAU,CAAC;IAAEK,OAAO,EAAE;EAAX,CAAD,CAAxB;;EACA,MAAMC,UAAU,GAAIC,QAAD,IAAc;IAE/B,OAAO,YAAY;MACjB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,WAAT,CAAqBF,QAArB,CAArB;QACAN,WAAW,CAAC,MAAM;UAChB,KAAKS,YAAL,CAAkBL,OAAlB,GAA4BG,MAAM,CAACG,IAAnC;QACD,CAFU,CAAX;MAGD,CALD,CAKE,OAAOC,GAAP,EAAY,CAEb;;MACDC,OAAO,CAACC,GAAR,CAAYP,QAAZ;IACD,CAVD;EAWD,CAbD;;EAcA,OAAO;IACLH,KADK;IAELW,UAAU,EAAE;MACVT;IADU;EAFP,CAAP;AAMD"},"metadata":{},"sourceType":"module"}