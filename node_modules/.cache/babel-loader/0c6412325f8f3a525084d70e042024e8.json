{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuc Vi\\\\Desktop\\\\ISDFrontend\\\\src\\\\components\\\\Core\\\\Sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport { Drawer, IconButton, List } from '@mui/material';\nimport { useTheme } from '@mui/material';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames'; // import { withRouter } from 'react-router-dom';\n// styles\n\nimport useStyles from './styles'; // components\n\nimport SidebarLink from './components/SidebarLink/SidebarLink'; // context\n\nimport { useLayoutState, useLayoutDispatch, toggleSidebar } from '../context/LayoutContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  _s();\n\n  let {\n    location,\n    structure\n  } = _ref;\n  let classes = useStyles();\n  let theme = useTheme();\n\n  const toggleDrawer = value => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    if (value && !isPermanent) toggleSidebar(layoutDispatch);\n  }; // global\n\n\n  let isSidebarOpened = useLayoutState();\n  let layoutDispatch = useLayoutDispatch(); // local\n\n  let [isPermanent, setPermanent] = useState(true);\n  const isSidebarOpenedWrapper = useMemo(() => !isPermanent ? !isSidebarOpened : isSidebarOpened, [isPermanent, isSidebarOpened]);\n  console.log(isSidebarOpenedWrapper);\n  useEffect(function () {\n    window.addEventListener('resize', handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener('resize', handleWindowWidthChange);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: isPermanent ? 'permanent' : 'temporary',\n    className: classNames(classes.drawer, {\n      [classes.drawerOpen]: isSidebarOpenedWrapper,\n      [classes.drawerClose]: !isSidebarOpenedWrapper\n    }),\n    classes: {\n      paper: classNames({\n        [classes.drawerOpen]: isSidebarOpenedWrapper,\n        [classes.drawerClose]: !isSidebarOpenedWrapper\n      })\n    },\n    open: isSidebarOpenedWrapper,\n    onClose: toggleDrawer(true),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mobileBackButton,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => toggleSidebar(layoutDispatch),\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          classes: {\n            root: classNames(classes.headerIcon, classes.headerIconCollapse)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.sidebarList,\n      classes: {\n        padding: classes.padding\n      },\n      children: structure.map(link => /*#__PURE__*/_jsxDEV(SidebarLink, {\n        location: location,\n        isSidebarOpened: !isPermanent ? !isSidebarOpened : isSidebarOpened,\n        ...link,\n        toggleDrawer: toggleDrawer(true)\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this); // ##################################################################\n\n  function handleWindowWidthChange() {\n    let windowWidth = window.innerWidth;\n    let breakpointWidth = theme.breakpoints.values.md;\n    let isSmallScreen = windowWidth < breakpointWidth; // console.log(windowWidth)\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n} // export default withRouter(Sidebar);\n\n\n_s(Sidebar, \"SeEhWo4knHISOn8sbVjW7nOTZ7E=\", false, function () {\n  return [useStyles, useTheme, useLayoutState, useLayoutDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","ArrowBack","ArrowBackIcon","Drawer","IconButton","List","useTheme","withRouter","classNames","useStyles","SidebarLink","useLayoutState","useLayoutDispatch","toggleSidebar","Sidebar","location","structure","classes","theme","toggleDrawer","value","event","type","key","isPermanent","layoutDispatch","isSidebarOpened","setPermanent","isSidebarOpenedWrapper","console","log","window","addEventListener","handleWindowWidthChange","cleanup","removeEventListener","drawer","drawerOpen","drawerClose","paper","toolbar","mobileBackButton","root","headerIcon","headerIconCollapse","sidebarList","padding","map","link","id","windowWidth","innerWidth","breakpointWidth","breakpoints","values","md","isSmallScreen"],"sources":["C:/Users/Thuc Vi/Desktop/ISDFrontend/src/components/Core/Sidebar/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport { Drawer, IconButton, List } from '@mui/material';\nimport { useTheme } from '@mui/material';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n// import { withRouter } from 'react-router-dom';\n// styles\nimport useStyles from './styles';\n\n// components\nimport SidebarLink from './components/SidebarLink/SidebarLink';\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from '../context/LayoutContext';\n\nfunction Sidebar({ location, structure }) {\n\n  let classes = useStyles();\n  \n  let theme = useTheme();\n \n  const toggleDrawer = (value) => (event) => {\n    \n    if (\n      event.type === 'keydown' &&\n      (event.key === 'Tab' || event.key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (value && !isPermanent) toggleSidebar(layoutDispatch);\n\n  };\n\n  // global\n  let isSidebarOpened  = useLayoutState();\n  let layoutDispatch = useLayoutDispatch();\n\n  // local\n  let [isPermanent, setPermanent] = useState(true);\n\n  const isSidebarOpenedWrapper = useMemo(\n    () => (!isPermanent ? !isSidebarOpened : isSidebarOpened),\n    [isPermanent, isSidebarOpened],\n  );\n  console.log(isSidebarOpenedWrapper )\n  useEffect(function () {\n    window.addEventListener('resize', handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener('resize', handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? 'permanent' : 'temporary'}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpenedWrapper,\n        [classes.drawerClose]: !isSidebarOpenedWrapper,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpenedWrapper,\n          [classes.drawerClose]: !isSidebarOpenedWrapper,\n        }),\n      }}\n      open={isSidebarOpenedWrapper}\n      onClose={toggleDrawer(true)}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List\n        className={classes.sidebarList}\n        classes={{ padding: classes.padding }}\n      >\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={!isPermanent ? !isSidebarOpened : isSidebarOpened}\n            {...link}\n            toggleDrawer={toggleDrawer(true)}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    \n    let windowWidth = window.innerWidth;\n    let breakpointWidth = theme.breakpoints.values.md;\n    let isSmallScreen = windowWidth < breakpointWidth;\n    // console.log(windowWidth)\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\n// export default withRouter(Sidebar);\nexport default Sidebar;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,SAAS,IAAIC,aAAtB,QAA2C,qBAA3C;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,eAAzC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sCAAxB,C,CAEA;;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,aAHF,QAIO,0BAJP;;;AAMA,SAASC,OAAT,OAA0C;EAAA;;EAAA,IAAzB;IAAEC,QAAF;IAAYC;EAAZ,CAAyB;EAExC,IAAIC,OAAO,GAAGR,SAAS,EAAvB;EAEA,IAAIS,KAAK,GAAGZ,QAAQ,EAApB;;EAEA,MAAMa,YAAY,GAAIC,KAAD,IAAYC,KAAD,IAAW;IAEzC,IACEA,KAAK,CAACC,IAAN,KAAe,SAAf,KACCD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OADtC,CADF,EAGE;MACA;IACD;;IAED,IAAIH,KAAK,IAAI,CAACI,WAAd,EAA2BX,aAAa,CAACY,cAAD,CAAb;EAE5B,CAXD,CANwC,CAmBxC;;;EACA,IAAIC,eAAe,GAAIf,cAAc,EAArC;EACA,IAAIc,cAAc,GAAGb,iBAAiB,EAAtC,CArBwC,CAuBxC;;EACA,IAAI,CAACY,WAAD,EAAcG,YAAd,IAA8B7B,QAAQ,CAAC,IAAD,CAA1C;EAEA,MAAM8B,sBAAsB,GAAG5B,OAAO,CACpC,MAAO,CAACwB,WAAD,GAAe,CAACE,eAAhB,GAAkCA,eADL,EAEpC,CAACF,WAAD,EAAcE,eAAd,CAFoC,CAAtC;EAIAG,OAAO,CAACC,GAAR,CAAYF,sBAAZ;EACA7B,SAAS,CAAC,YAAY;IACpBgC,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,uBAAlC;IACAA,uBAAuB;IACvB,OAAO,SAASC,OAAT,GAAmB;MACxBH,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,uBAArC;IACD,CAFD;EAGD,CANQ,CAAT;EAQA,oBACE,QAAC,MAAD;IACE,OAAO,EAAET,WAAW,GAAG,WAAH,GAAiB,WADvC;IAEE,SAAS,EAAEhB,UAAU,CAACS,OAAO,CAACmB,MAAT,EAAiB;MACpC,CAACnB,OAAO,CAACoB,UAAT,GAAsBT,sBADc;MAEpC,CAACX,OAAO,CAACqB,WAAT,GAAuB,CAACV;IAFY,CAAjB,CAFvB;IAME,OAAO,EAAE;MACPW,KAAK,EAAE/B,UAAU,CAAC;QAChB,CAACS,OAAO,CAACoB,UAAT,GAAsBT,sBADN;QAEhB,CAACX,OAAO,CAACqB,WAAT,GAAuB,CAACV;MAFR,CAAD;IADV,CANX;IAYE,IAAI,EAAEA,sBAZR;IAaE,OAAO,EAAET,YAAY,CAAC,IAAD,CAbvB;IAAA,wBAeE;MAAK,SAAS,EAAEF,OAAO,CAACuB;IAAxB;MAAA;MAAA;MAAA;IAAA,QAfF,eAgBE;MAAK,SAAS,EAAEvB,OAAO,CAACwB,gBAAxB;MAAA,uBACE,QAAC,UAAD;QAAY,OAAO,EAAE,MAAM5B,aAAa,CAACY,cAAD,CAAxC;QAAA,uBACE,QAAC,aAAD;UACE,OAAO,EAAE;YACPiB,IAAI,EAAElC,UAAU,CAACS,OAAO,CAAC0B,UAAT,EAAqB1B,OAAO,CAAC2B,kBAA7B;UADT;QADX;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAhBF,eAyBE,QAAC,IAAD;MACE,SAAS,EAAE3B,OAAO,CAAC4B,WADrB;MAEE,OAAO,EAAE;QAAEC,OAAO,EAAE7B,OAAO,CAAC6B;MAAnB,CAFX;MAAA,UAIG9B,SAAS,CAAC+B,GAAV,CAAcC,IAAI,iBACjB,QAAC,WAAD;QAEE,QAAQ,EAAEjC,QAFZ;QAGE,eAAe,EAAE,CAACS,WAAD,GAAe,CAACE,eAAhB,GAAkCA,eAHrD;QAAA,GAIMsB,IAJN;QAKE,YAAY,EAAE7B,YAAY,CAAC,IAAD;MAL5B,GACO6B,IAAI,CAACC,EADZ;QAAA;QAAA;QAAA;MAAA,QADD;IAJH;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAvCwC,CAkFxC;;EACA,SAAShB,uBAAT,GAAmC;IAEjC,IAAIiB,WAAW,GAAGnB,MAAM,CAACoB,UAAzB;IACA,IAAIC,eAAe,GAAGlC,KAAK,CAACmC,WAAN,CAAkBC,MAAlB,CAAyBC,EAA/C;IACA,IAAIC,aAAa,GAAGN,WAAW,GAAGE,eAAlC,CAJiC,CAKjC;;IACA,IAAII,aAAa,IAAIhC,WAArB,EAAkC;MAChCG,YAAY,CAAC,KAAD,CAAZ;IACD,CAFD,MAEO,IAAI,CAAC6B,aAAD,IAAkB,CAAChC,WAAvB,EAAoC;MACzCG,YAAY,CAAC,IAAD,CAAZ;IACD;EACF;AACF,C,CAED;;;GAjGSb,O;UAEOL,S,EAEFH,Q,EAgBWK,c,EACFC,iB;;;KArBdE,O;AAkGT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}