{"ast":null,"code":"import { makeObservable, observable, runInAction } from \"mobx\";\nimport * as services from './service'; // export default function companyStore() {\n//   return {\n//     companyStore: observable({company:[]}),\n//     async getCompany(username) {\n//       try {\n//         const result = await services.companyList(username)\n//         runInAction(() => {\n//          this.companyStore.company = result.data; \n//         });\n//       } catch (err) {\n//       }\n//     },\n//   }\n// }\n\nfunction companyStore() {\n  const store = observable({\n    company: []\n  });\n\n  const getCompany = username => {\n    return async () => {\n      try {\n        const result = await services.companyList(username);\n        runInAction(() => {\n          this.companyStore.company = result.data;\n        });\n      } catch (err) {}\n    };\n  };\n\n  return {\n    store,\n    controller: {\n      getCompany\n    }\n  };\n}\n\nexport { companyStore };","map":{"version":3,"names":["makeObservable","observable","runInAction","services","companyStore","store","company","getCompany","username","result","companyList","data","err","controller"],"sources":["C:/Users/Thuc Vi/Desktop/ISDFrontend/src/store/companyStore.js"],"sourcesContent":["import { makeObservable, observable, runInAction } from \"mobx\"\r\nimport * as services from './service';\r\n\r\n// export default function companyStore() {\r\n//   return {\r\n\r\n//     companyStore: observable({company:[]}),\r\n//     async getCompany(username) {\r\n//       try {\r\n//         const result = await services.companyList(username)\r\n//         runInAction(() => {\r\n//          this.companyStore.company = result.data; \r\n//         });\r\n\r\n//       } catch (err) {\r\n\r\n//       }\r\n//     },\r\n\r\n//   }\r\n// }\r\n\r\nfunction companyStore() {\r\n  const store = observable({ company: [] });\r\n  const getCompany = (username) => {\r\n    return async () => {\r\n      try {\r\n        const result = await services.companyList(username)\r\n        runInAction(() => {\r\n          this.companyStore.company = result.data;\r\n        });\r\n      } catch (err) {\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    store,\r\n    controller: {\r\n      getCompany,\r\n    }\r\n  }\r\n}\r\n\r\nexport { companyStore };\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,QAAwD,MAAxD;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA,SAASC,YAAT,GAAwB;EACtB,MAAMC,KAAK,GAAGJ,UAAU,CAAC;IAAEK,OAAO,EAAE;EAAX,CAAD,CAAxB;;EACA,MAAMC,UAAU,GAAIC,QAAD,IAAc;IAC/B,OAAO,YAAY;MACjB,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,WAAT,CAAqBF,QAArB,CAArB;QACAN,WAAW,CAAC,MAAM;UAChB,KAAKE,YAAL,CAAkBE,OAAlB,GAA4BG,MAAM,CAACE,IAAnC;QACD,CAFU,CAAX;MAGD,CALD,CAKE,OAAOC,GAAP,EAAY,CACb;IACF,CARD;EASD,CAVD;;EAYA,OAAO;IACLP,KADK;IAELQ,UAAU,EAAE;MACVN;IADU;EAFP,CAAP;AAMD;;AAED,SAASH,YAAT"},"metadata":{},"sourceType":"module"}