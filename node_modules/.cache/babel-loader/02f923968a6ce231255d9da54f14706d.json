{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuc Vi\\\\Desktop\\\\ISDFrontend\\\\src\\\\components\\\\Core\\\\Sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react'; // import { ArrowBack as ArrowBackIcon } from '@mui/icons-material';\n\nimport { Drawer, IconButton, List } from '@mui/material';\nimport { useTheme } from '@mui/material';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames'; // import { withRouter } from 'react-router-dom';\n// styles\n\nimport useStyles from './styles'; // components\n\nimport SidebarLink from './components/SidebarLink/SidebarLink'; // context\n\nimport { useLayoutState, useLayoutDispatch, toggleSidebar } from '../context/LayoutContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  _s();\n\n  let {\n    location,\n    structure\n  } = _ref;\n  let classes = useStyles();\n  console.log(structure);\n  let theme = useTheme(); // const toggleDrawer = (value) => (event) => {\n  //   if (\n  //     event.type === 'keydown' &&\n  //     (event.key === 'Tab' || event.key === 'Shift')\n  //   ) {\n  //     return;\n  //   }\n  //   if (value && !isPermanent) toggleSidebar(layoutDispatch);\n  // };\n  // global\n\n  let {\n    isSidebarOpened\n  } = useLayoutState();\n  let layoutDispatch = useLayoutDispatch(); // local\n  // let [isPermanent, setPermanent] = useState(true);\n  // const isSidebarOpenedWrapper = useMemo(\n  //   () => (!isPermanent ? !isSidebarOpened : isSidebarOpened),\n  //   [isPermanent, isSidebarOpened],\n  // );\n  // useEffect(function () {\n  //   window.addEventListener('resize', handleWindowWidthChange);\n  //   handleWindowWidthChange();\n  //   return function cleanup() {\n  //     window.removeEventListener('resize', handleWindowWidthChange);\n  //   };\n  // });\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: isPermanent ? 'permanent' : 'temporary',\n    className: classNames(classes.drawer, {\n      [classes.drawerOpen]: isSidebarOpenedWrapper,\n      [classes.drawerClose]: !isSidebarOpenedWrapper\n    }),\n    classes: {\n      paper: classNames({\n        [classes.drawerOpen]: isSidebarOpenedWrapper,\n        [classes.drawerClose]: !isSidebarOpenedWrapper\n      })\n    },\n    open: isSidebarOpenedWrapper,\n    onClose: toggleDrawer(true),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mobileBackButton,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => toggleSidebar(layoutDispatch)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.sidebarList,\n      classes: {\n        padding: classes.padding\n      },\n      children: structure.map(link => /*#__PURE__*/_jsxDEV(SidebarLink, {\n        location: location,\n        isSidebarOpened: !isPermanent ? !isSidebarOpened : isSidebarOpened,\n        ...link,\n        toggleDrawer: toggleDrawer(true)\n      }, link.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this); // ##################################################################\n  // function handleWindowWidthChange() {\n  //   let windowWidth = window.innerWidth;\n  //   let breakpointWidth = theme.breakpoints.values.md;\n  //   let isSmallScreen = windowWidth < breakpointWidth;\n  //   if (isSmallScreen && isPermanent) {\n  //     setPermanent(false);\n  //   } else if (!isSmallScreen && !isPermanent) {\n  //     setPermanent(true);\n  //   }\n  // }\n} // export default withRouter(Sidebar);\n\n\n_s(Sidebar, \"7rXc6/pgpKl8Kq+FRcQMoGts45w=\", false, function () {\n  return [useStyles, useTheme, useLayoutState, useLayoutDispatch];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Drawer","IconButton","List","useTheme","withRouter","classNames","useStyles","SidebarLink","useLayoutState","useLayoutDispatch","toggleSidebar","Sidebar","location","structure","classes","console","log","theme","isSidebarOpened","layoutDispatch","isPermanent","drawer","drawerOpen","isSidebarOpenedWrapper","drawerClose","paper","toggleDrawer","toolbar","mobileBackButton","sidebarList","padding","map","link","id"],"sources":["C:/Users/Thuc Vi/Desktop/ISDFrontend/src/components/Core/Sidebar/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\n// import { ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport { Drawer, IconButton, List } from '@mui/material';\nimport { useTheme } from '@mui/material';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n// import { withRouter } from 'react-router-dom';\n// styles\nimport useStyles from './styles';\n\n// components\nimport SidebarLink from './components/SidebarLink/SidebarLink';\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from '../context/LayoutContext';\n\nfunction Sidebar({ location, structure }) {\n \n  let classes = useStyles();\n  console.log(structure)\n  let theme = useTheme();\n  \n  // const toggleDrawer = (value) => (event) => {\n  //   if (\n  //     event.type === 'keydown' &&\n  //     (event.key === 'Tab' || event.key === 'Shift')\n  //   ) {\n  //     return;\n  //   }\n\n  //   if (value && !isPermanent) toggleSidebar(layoutDispatch);\n  // };\n\n  // global\n  let { isSidebarOpened } = useLayoutState();\n  let layoutDispatch = useLayoutDispatch();\n\n  // local\n  // let [isPermanent, setPermanent] = useState(true);\n\n  // const isSidebarOpenedWrapper = useMemo(\n  //   () => (!isPermanent ? !isSidebarOpened : isSidebarOpened),\n  //   [isPermanent, isSidebarOpened],\n  // );\n\n  // useEffect(function () {\n  //   window.addEventListener('resize', handleWindowWidthChange);\n  //   handleWindowWidthChange();\n  //   return function cleanup() {\n  //     window.removeEventListener('resize', handleWindowWidthChange);\n  //   };\n  // });\n\n  return (\n    <Drawer\n      variant={isPermanent ? 'permanent' : 'temporary'}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpenedWrapper,\n        [classes.drawerClose]: !isSidebarOpenedWrapper,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpenedWrapper,\n          [classes.drawerClose]: !isSidebarOpenedWrapper,\n        }),\n      }}\n      open={isSidebarOpenedWrapper}\n      onClose={toggleDrawer(true)}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          {/* <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          /> */}\n        </IconButton>\n      </div>\n      <List\n        className={classes.sidebarList}\n        classes={{ padding: classes.padding }}\n      >\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={!isPermanent ? !isSidebarOpened : isSidebarOpened}\n            {...link}\n            toggleDrawer={toggleDrawer(true)}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  // function handleWindowWidthChange() {\n  //   let windowWidth = window.innerWidth;\n  //   let breakpointWidth = theme.breakpoints.values.md;\n  //   let isSmallScreen = windowWidth < breakpointWidth;\n\n  //   if (isSmallScreen && isPermanent) {\n  //     setPermanent(false);\n  //   } else if (!isSmallScreen && !isPermanent) {\n  //     setPermanent(true);\n  //   }\n  // }\n}\n\n// export default withRouter(Sidebar);\nexport default Sidebar;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD,C,CACA;;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,eAAzC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,sCAAxB,C,CAEA;;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,aAHF,QAIO,0BAJP;;;AAMA,SAASC,OAAT,OAA0C;EAAA;;EAAA,IAAzB;IAAEC,QAAF;IAAYC;EAAZ,CAAyB;EAExC,IAAIC,OAAO,GAAGR,SAAS,EAAvB;EACAS,OAAO,CAACC,GAAR,CAAYH,SAAZ;EACA,IAAII,KAAK,GAAGd,QAAQ,EAApB,CAJwC,CAMxC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;;EACA,IAAI;IAAEe;EAAF,IAAsBV,cAAc,EAAxC;EACA,IAAIW,cAAc,GAAGV,iBAAiB,EAAtC,CAnBwC,CAqBxC;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,MAAD;IACE,OAAO,EAAEW,WAAW,GAAG,WAAH,GAAiB,WADvC;IAEE,SAAS,EAAEf,UAAU,CAACS,OAAO,CAACO,MAAT,EAAiB;MACpC,CAACP,OAAO,CAACQ,UAAT,GAAsBC,sBADc;MAEpC,CAACT,OAAO,CAACU,WAAT,GAAuB,CAACD;IAFY,CAAjB,CAFvB;IAME,OAAO,EAAE;MACPE,KAAK,EAAEpB,UAAU,CAAC;QAChB,CAACS,OAAO,CAACQ,UAAT,GAAsBC,sBADN;QAEhB,CAACT,OAAO,CAACU,WAAT,GAAuB,CAACD;MAFR,CAAD;IADV,CANX;IAYE,IAAI,EAAEA,sBAZR;IAaE,OAAO,EAAEG,YAAY,CAAC,IAAD,CAbvB;IAAA,wBAeE;MAAK,SAAS,EAAEZ,OAAO,CAACa;IAAxB;MAAA;MAAA;MAAA;IAAA,QAfF,eAgBE;MAAK,SAAS,EAAEb,OAAO,CAACc,gBAAxB;MAAA,uBACE,QAAC,UAAD;QAAY,OAAO,EAAE,MAAMlB,aAAa,CAACS,cAAD;MAAxC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAhBF,eAyBE,QAAC,IAAD;MACE,SAAS,EAAEL,OAAO,CAACe,WADrB;MAEE,OAAO,EAAE;QAAEC,OAAO,EAAEhB,OAAO,CAACgB;MAAnB,CAFX;MAAA,UAIGjB,SAAS,CAACkB,GAAV,CAAcC,IAAI,iBACjB,QAAC,WAAD;QAEE,QAAQ,EAAEpB,QAFZ;QAGE,eAAe,EAAE,CAACQ,WAAD,GAAe,CAACF,eAAhB,GAAkCA,eAHrD;QAAA,GAIMc,IAJN;QAKE,YAAY,EAAEN,YAAY,CAAC,IAAD;MAL5B,GACOM,IAAI,CAACC,EADZ;QAAA;QAAA;QAAA;MAAA,QADD;IAJH;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CArCwC,CAgFxC;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;AACD,C,CAED;;;GA9FStB,O;UAEOL,S,EAEFH,Q,EAccK,c,EACLC,iB;;;KAnBdE,O;AA+FT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}