{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuc Vi\\\\Desktop\\\\ISDFrontend\\\\src\\\\store\\\\store.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocalObservable } from \"mobx-react-lite\";\nimport { createCompanyStore } from \"./companyStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const store = useLocalObservable(() => ({\n    /*observables*/\n    company: [],\n    error: \"\",\n\n    /*actions*/\n    async getCompany() {\n      try {\n        const {\n          data\n        } = await getCompanyByUserName();\n        console.log(data);\n        store.company = data; // console.log(toJS(store.company));\n      } catch (e) {\n        store.setError(e);\n      }\n    },\n\n    setError(_ref2) {\n      let {\n        message\n      } = _ref2;\n      store.error = message;\n      alert(message);\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserProvider, \"v8kuHChjTEmMZ3bg5oZ8zBWX1eE=\", false, function () {\n  return [useLocalObservable];\n});\n\n_c = UserProvider;\nexport const userContext = createContext();\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","useLocalObservable","createCompanyStore","UserProvider","children","store","company","error","getCompany","data","getCompanyByUserName","console","log","e","setError","message","alert","userContext","createContext"],"sources":["C:/Users/Thuc Vi/Desktop/ISDFrontend/src/store/store.js"],"sourcesContent":["import React from \"react\";\nimport { useLocalObservable } from \"mobx-react-lite\";\nimport {createCompanyStore} from \"./companyStore\";\n\n\nexport const UserProvider = ({ children }) => {\n  const store = useLocalObservable(() => ({\n    /*observables*/\n    company: [],\n    error: \"\",\n    /*actions*/\n    async getCompany() {\n      try {\n        const { data } = await getCompanyByUserName();\n        console.log(data);\n        store.company = data;\n        // console.log(toJS(store.company));\n      } catch (e) {\n        store.setError(e);\n      }\n    },\n    setError({ message }) {\n      store.error = message;\n      alert(message);\n    },\n  }));\n  return <userContext.Provider value={store}>{children}</userContext.Provider>;\n};\nexport const userContext = createContext();\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAAQC,kBAAR,QAAiC,gBAAjC;;AAGA,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAMC,KAAK,GAAGJ,kBAAkB,CAAC,OAAO;IACtC;IACAK,OAAO,EAAE,EAF6B;IAGtCC,KAAK,EAAE,EAH+B;;IAItC;IACA,MAAMC,UAAN,GAAmB;MACjB,IAAI;QACF,MAAM;UAAEC;QAAF,IAAW,MAAMC,oBAAoB,EAA3C;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACAJ,KAAK,CAACC,OAAN,GAAgBG,IAAhB,CAHE,CAIF;MACD,CALD,CAKE,OAAOI,CAAP,EAAU;QACVR,KAAK,CAACS,QAAN,CAAeD,CAAf;MACD;IACF,CAdqC;;IAetCC,QAAQ,QAAc;MAAA,IAAb;QAAEC;MAAF,CAAa;MACpBV,KAAK,CAACE,KAAN,GAAcQ,OAAd;MACAC,KAAK,CAACD,OAAD,CAAL;IACD;;EAlBqC,CAAP,CAAD,CAAhC;EAoBA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEV,KAA7B;IAAA,UAAqCD;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAtBM;;GAAMD,Y;UACGF,kB;;;KADHE,Y;AAuBb,OAAO,MAAMc,WAAW,GAAGC,aAAa,EAAjC"},"metadata":{},"sourceType":"module"}