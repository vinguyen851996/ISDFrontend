{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thuc Vi\\\\Desktop\\\\ISDFrontend\\\\src\\\\store\\\\store.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeObservable, observable, action } from \"mobx\";\nimport { get } from 'utils/api';\n/* Store start */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Store {// company=[];\n  // async getNote(username) {\n  //   try {\n  //     const result = await get(`Permission/Auth/GetListCompanyByUsername?username=${username}`)\n  //     this.company = result.data\n  //     console.log(this.company )\n  //   } catch (err) {\n  //   }\n  // }\n  // @observable title = \"Coding is Love\";\n  // @observable user = {\n  //   userId: 1,\n  //   name: \"Ranjith kumar\",\n  //   website: \"https://codingislove.com\",\n  //   email: \"ranjith@codingislove.com\",\n  // };\n  // @action\n  // setUser(user) {\n  //   this.user = user;\n  // }\n  // @action\n  // updateUser(data) {\n  //   this.user = { ...this.user, ...data };\n  // }\n  // @action\n  // clearUser() {\n  //   this.user = undefined;\n  // }\n  // @action\n  // setTitle(title) {\n  //   this.title = title;\n  // }\n}\n/* Store end */\n\n/* Store helpers */\n\nconst StoreContext = /*#__PURE__*/React.createContext();\nexport const StoreProvider = _ref => {\n  let {\n    children,\n    store\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n/* Hook to use store in any functional component */\n\n_c = StoreProvider;\nexport const useStore = () => {\n  _s();\n\n  return React.useContext(StoreContext);\n};\n/* HOC to inject store to any functional or class component */\n\n_s(useStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const withStore = Component => {\n  var _s2 = $RefreshSig$();\n\n  return _s2(props => {\n    _s2();\n\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      store: useStore()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this);\n  }, \"tRpAAnpj2/w/nb/IphdrVKKBg0Y=\", false, function () {\n    return [useStore];\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["React","makeObservable","observable","action","get","Store","StoreContext","createContext","StoreProvider","children","store","useStore","useContext","withStore","Component","props"],"sources":["C:/Users/Thuc Vi/Desktop/ISDFrontend/src/store/store.js"],"sourcesContent":["import React from \"react\";\nimport { makeObservable, observable, action } from \"mobx\"\nimport { get } from 'utils/api';\n\n/* Store start */\nexport default class Store {\n  // company=[];\n\n  // async getNote(username) {\n  //   try {\n  //     const result = await get(`Permission/Auth/GetListCompanyByUsername?username=${username}`)\n  //     this.company = result.data\n  //     console.log(this.company )\n  //   } catch (err) {\n\n  //   }\n  // }\n  // @observable title = \"Coding is Love\";\n\n  // @observable user = {\n  //   userId: 1,\n  //   name: \"Ranjith kumar\",\n  //   website: \"https://codingislove.com\",\n  //   email: \"ranjith@codingislove.com\",\n  // };\n\n  // @action\n  // setUser(user) {\n  //   this.user = user;\n  // }\n\n  // @action\n  // updateUser(data) {\n  //   this.user = { ...this.user, ...data };\n  // }\n\n  // @action\n  // clearUser() {\n  //   this.user = undefined;\n  // }\n\n  // @action\n  // setTitle(title) {\n  //   this.title = title;\n  // }\n}\n/* Store end */\n\n/* Store helpers */\nconst StoreContext = React.createContext();\n\nexport const StoreProvider = ({ children, store }) => {\n  return (\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n  );\n};\n\n/* Hook to use store in any functional component */\nexport const useStore = () => React.useContext(StoreContext);\n\n/* HOC to inject store to any functional or class component */\nexport const withStore = (Component) => (props) => {\n  return <Component {...props} store={useStore()} />;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,QAAmD,MAAnD;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA;;;AACA,eAAe,MAAMC,KAAN,CAAY,CACzB;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;AAvCyB;AAyC3B;;AAEA;;AACA,MAAMC,YAAY,gBAAGN,KAAK,CAACO,aAAN,EAArB;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAyB;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EACpD,oBACE,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAEA,KAA9B;IAAA,UAAsCD;EAAtC;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAJM;AAMP;;KANaD,a;AAOb,OAAO,MAAMG,QAAQ,GAAG;EAAA;;EAAA,OAAMX,KAAK,CAACY,UAAN,CAAiBN,YAAjB,CAAN;AAAA,CAAjB;AAEP;;GAFaK,Q;;AAGb,OAAO,MAAME,SAAS,GAAIC,SAAD;EAAA;;EAAA,WAAgBC,KAAD,IAAW;IAAA;;IACjD,oBAAO,QAAC,SAAD,OAAeA,KAAf;MAAsB,KAAK,EAAEJ,QAAQ;IAArC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFwB;IAAA,QACaA,QADb;EAAA;AAAA,CAAlB"},"metadata":{},"sourceType":"module"}